import React, { useState } from 'react';
import Modal from 'react-modal';
import './App.css';
import Weekly from './Weekly';
import Daily from './Daily';
import Monthly from './Monthly';
import Smartifi from './Smartifi';

function Policy() {
  const [selectedPlan, setSelectedPlan] = useState('monthly');
  const [selectedAppId, setSelectedAppId] = useState('');
  const [showPopup, setShowPopup] = useState(false);
  const [selectedDay, setSelectedDay] = useState('');
  const [weekIndex, setWeekIndex] = useState(null);

  const appIds = ['12345', '67890', '54321', '09876', '11223'];

  const handleSubmitClick = (day, weekIndex = null) => {
    setSelectedDay(day);
    setWeekIndex(weekIndex);
    setShowPopup(true);
  };

  const handleConfirmSubmit = () => {
    setShowPopup(false);
  
  };

  return (
    <div className="App wells-fargo-theme">
      <div className="navbar premium-style">
        <h1>Scheduler App</h1>
        <div className="plan-selector">
          <label>
            <input
              type="radio"
              value="daily"
              checked={selectedPlan === 'daily'}
              onChange={() => setSelectedPlan('daily')}
            />
            Daily
          </label>
          <label>
            <input
              type="radio"
              value="weekly"
              checked={selectedPlan === 'weekly'}
              onChange={() => setSelectedPlan('weekly')}
            />
            Weekly
          </label>
          <label>
            <input
              type="radio"
              value="monthly"
              checked={selectedPlan === 'monthly'}
              onChange={() => setSelectedPlan('monthly')}
            />
            Monthly
          </label>
          <label>
            <input
              type="radio"
              value="smartifi"
              checked={selectedPlan === 'smartifi'}
              onChange={() => setSelectedPlan('smartifi')}
            />
            Smartifi
          </label>
        </div>
        <div className="app-id">
          <label htmlFor="app-id-select">App ID:</label>
          <select
            id="app-id-select"
            value={selectedAppId}
            onChange={(e) => setSelectedAppId(e.target.value)}
          >
            <option value="">Select an App ID</option>
            {appIds.map((appId) => (
              <option key={appId} value={appId}>
                {appId}
              </option>
            ))}
          </select>
        </div>
      </div>

      {selectedPlan === 'daily' && <Daily />}
      {selectedPlan === 'weekly' && <Weekly />}
      {selectedPlan === 'monthly' && <Monthly />}
      {selectedPlan === 'smartifi' && <Smartifi />}

      <Modal
        isOpen={showPopup}
        onRequestClose={() => setShowPopup(false)}
        className="modal"
        overlayClassName="modal-overlay"
      >
        <h2>Confirm Submission</h2>
        <p>Are you sure you want to submit the actions for {selectedDay}?</p>
        <button onClick={handleConfirmSubmit}>Yes</button>
        <button onClick={() => setShowPopup(false)}>No</button>
      </Modal>
    </div>
  );
}

export default Policy;
/* Global Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Roboto', sans-serif;
  background: linear-gradient(to right, #f4c542, #bf1e2e);
  color: #333;
}

.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 2rem;
  background-color: #bf1e2e;
  color: white;
  border-radius: 1rem;
  flex-wrap: wrap;
}

.navbar h1 {
  font-size: 2rem;
}

.plan-selector,
.app-id {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.plan-selector label,
.app-id label {
  font-size: 1.2rem;
  font-weight: bold;
}

.app-id select {
  padding: 1rem 1.5rem;
  border: none;
  border-radius: 0.5rem;
  background: #f4c542;
  color: #333;
  font-size: 1rem;
  font-weight: bold;
  box-shadow: 0 0.2rem 0.4rem rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease, color 0.3s ease;
}

.app-id select:hover {
  background: #e5b933;
  color: #222;
}

.nav-buttons button {
  padding: 1rem 2rem;
  font-size: 1rem;
  margin-top: 2rem;
  cursor: pointer;
  border: none;
  border-radius: 0.5rem;
  background: #bf1e2e;
  color: white;
  transition: background-color 0.3s ease;
}

.nav-buttons button:hover {
  background: #a5171a;
}

/* Styles for Monthly Plan */
.monthly-plan .monthly-week {
  margin-bottom: 2rem;
}

.monthly-week h3 {
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
}

.monthly-day {
  margin-bottom: 1rem;
}

.monthly-day .date {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
}

.monthly-day .add-icon {
  cursor: pointer;
  color: #bf1e2e;
  font-size: 1.5rem;
  transition: color 0.3s ease;
}

.monthly-day .add-icon:hover {
  color: #a5171a;
}

.action-creator {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
  padding: 1rem;
  background: #fff;
  border-radius: 0.5rem;
  box-shadow: 0 0.1rem 0.3rem rgba(0, 0, 0, 0.1);
}

.action-creator input,
.action-creator select {
  padding: 0.5rem;
  margin-right: 1rem;
  border: 0.1rem solid #ccc;
  border-radius: 0.5rem;
  font-size: 1rem;
}

.action-creator select {
  cursor: pointer;
}

.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: white;
  padding: 2rem;
  border-radius: 0.5rem;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
  z-index: 1000;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Media Query for Small Screens */
@media (max-width: 768px) {
  .navbar {
    flex-direction: column;
    align-items: flex-start;
  }

  .plan-selector,
  .app-id {
    width: 100%;
    flex-direction: column;
    gap: 1rem;
  }

  .app-id {
    margin-top: 1rem;
  }

  .nav-buttons {
    width: 100%;
    display: flex;
    justify-content: center;
  }

  .nav-buttons button {
    width: 100%;
    max-width: 20rem;
  }
}
